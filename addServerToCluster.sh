
#export ANYPOINT_USERNAME=<name>
#export ANYPOINT_PASSWORD=<password>
#export ANYPOINT_ORG="DWP"
#export ANYPOINT_ENV="Sandbox"
#export ANYPOINT_HOST="eu1.anypoint.mulesoft.com"

#script parameters (mandatory) 
MULE_BASE="/Users/adam.davis/other_applications/mule-4.1.5-RT1"
RUNTIME_NAME="mule-RT1" 
CLUSTERNAME="myCluster" 

#proxy details (optional)
PROXY_HOST=proxy.integr-dev.dwpcloud.uk
PROXY_PORT=8080

ECHO ...start cluster registration 

#get the token for registering the server 
ARM_TOKEN="$(anypoint-cli runtime-mgr server token)"
ECHO Registration token [$ARM_TOKEN]

#registered the runtime 
${MULE_BASE}/bin/amc_setup -R eu1 -H $ARM_TOKEN $RUNTIME_NAME -P $PROXY_HOST $PROXY_PORT
#${MULE_BASE}/bin/amc_setup -H $ARM_TOKEN $RUNTIME_NAME 

#add the proxy configuration to wrapper.conf. The integers identiofy the line numbers are deliberately lareg to avoid conflicts from the numbers generated by amc_setup
if [[ ! -z "$PROXY_HOST" ]]; then echo 'wrapper.java.additional.100=-Danypoint.platform.proxy_host='$PROXY_HOST >> ${MULE_BASE}/conf/wrapper.conf ; fi
if [[ ! -z "$PROXY_PORT" ]]; then echo 'wrapper.java.additional.101=-Danypoint.platform.proxy_port='$PROXY_PORT >> ${MULE_BASE}/conf/wrapper.conf ; fi

#update the agent yaml to expose the agent endpoint. this is required for liveness and readiness probe 
#pip install yq
yq '.transports."rest.agent.transport" |= . + { "port" : "9999", "enabled": "true" }' ${MULE_BASE}/conf/mule-agent.yml -y > ${MULE_BASE}/conf/mule-agent_tmp.yml
mv ${MULE_BASE}/conf/mule-agent_tmp.yml ${MULE_BASE}/conf/mule-agent.yml

#start the new mule server 
${MULE_BASE}/bin/mule start

RETURN_CODE=$?

if [[ "$RETURN_CODE" == 0 ]]; then

	#get ther server id for the newly registered server 
	SERVERID="$(anypoint-cli runtime-mgr server list -f ID,Name -o text | grep $RUNTIME_NAME | tr -dc '[:print:]' | sed 's/\[90m\[39m/ /g' | awk '{print $1}' )"

	ECHO retrived SERVERID[$SERVERID] from RUNTIME_NAME [$RUNTIME_NAME]

	if [[ -z "$SERVERID" ]]; then
		ECHO "Could not retreive Server ID, might be an issue creating server"
	else

		#get the cluster id from the4 cluster name 
		CLUSTERID="$(anypoint-cli runtime-mgr cluster list -f ID,Name  -o text | grep $CLUSTERNAME  | tr -dc '[:print:]' | sed 's/\[90m\[39m/ /g' | awk '{print $1}' )"

		#check to see if the cluster exists 
		if [[ -z "$CLUSTERID" ]]; then
			ECHO Could not retreive Cluster ID from [$CLUSTERNAME]. Creating new cluster with SERVERID [$SERVERID] assigned.

			#retreive the ipaddress of the runtime, this is required when creating the cluster for the first time 
			IPADDRESS="$(anypoint-cli runtime-mgr server describe $SERVERID -f 'Address 1 IP'  -o text | tr -dc '[:print:]' | sed 's/\[90m\[39m/ /g' | awk '{print $4}' )"
			
			if [[ ! -z "$SERVERID" ]] && [[ ! -z "$IPADDRESS" ]]; then

				ECHO Creating Cluster [$CLUSTERNAME] with SERVERID [$SERVERID] IPADDRESS [$IPADDRESS] 
				#create cluster with th server 
				anypoint-cli runtime-mgr cluster create $CLUSTERNAME --server $SERVERID:$IPADDRESS

				if [[ "$?" == 0 ]]; then
					ECHO Cluster created sucessfully 
				else 
					ECHO Error creating cluster 
					exit -1
				fi
			else
				ECHO Error - either SERVERID [$SERVERID] or IPADDRESS [$IPADDRESS] not retreived properly 
			fi
		else
			ECHO CLUSTERID [$CLUSTERID] retreived. Attempting to add SERVERID [$SERVERID]
			#add serever to existing cluster 
			anypoint-cli runtime-mgr cluster add server $CLUSTERID $SERVERID
			if [[ "$?" == 0 ]]; then
				ECHO Server added to cluster successfully   
			else 
				ECHO Error adding server to cluster 
				exit -1
			fi

		fi
	fi
else
	ECHO Mule runtime failed to start correctly. RETURN_CODE [$RETURN_CODE]
fi

ECHO ...finish cluster registration 